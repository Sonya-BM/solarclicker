* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

h1 {
  margin: 70px auto ;
  font-family: Montserrat;
  text-align: center;
  font-size: 68px;
  font-weight: 10;
  color: white;
  line-height: 50px;

}

span {
  color: red;
}

p {
  display: inline-block;
  margin-top: 25px;
}

.container{
  width: 1920px!important;
  padding: 0;
  margin: 0 auto;
}

.rotative_a{
  margin: 0 auto;
  border: white 2px solid;
  height: 1000px;
  transform: rotate(0deg);
  transition: all 600s;
  transform: rotate(9000deg);
}

.rotative_b{
  margin: 0 auto;
  border: white 2px solid;
  height: 1000px;
  transform: rotate(0deg);
  transition: all 600s;
  transform: rotate(9000deg);
}

.ancrage{
  border: 1px solid black;
  width: 30px;
  height: 100px;
  position: fixed;
  top:400px;
  right: 0;
}

.point_blanc{
  margin: 10px auto;
  width: 10px;
  height: 10px;
  border: 1px solid black;
  border-radius: 50%;
}

#titre{
  margin: 0 auto;
}

#nv_aff{
  color: red;
}

.jeu{
  margin: 0 auto;
  width: 100%;
  height: 1000px;
  background-image: url("image/texture/2k_stars.jpg");
  background-repeat: no-repeat;
  background-size: cover;

}

#earth {
  /* [1] Allow it to contain the absolutely positions pseudo-elements (later-on) */
  vertical-align: middle;
  position: absolute;
  top:565px;
  left: 715px;


  /* [2] Set-up the dimensions and spacing */
  /* width: 300px;*/
  width: 400px;
  height: 400px;
 

  /* [3] Prepare the animation effects */
  transition: transform 200ms linear;
  animation: terre_anim 20s linear infinite;
  /* This is going to be defined in the next step */

  /* [4] Tweak the appearance, and give it a nice background i.e. the world map */
  color: #000;
  border-radius: 50%;
  background: url(image/texture/terre.jpg) 0 0 repeat / 800px;
  box-shadow: inset 15px 0 40px 0px rgba(0, 0, 0, 1);

  /* [5] Position things in a 3d space */
  transform-style: preserve-3d;
}

#earth:after {
  /* [1] Break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Make it take all the space available in the box (ahem... globe!) */
  width: 100%;
  height: 100%;

  /* [3] Make sure this has no generated content, as we want this just for fancy purposes */
  content: '';

  /* [4] Give it some shape and shadow */
  border-radius: 50%;
  box-shadow: -60px 10px 80px 20px rgba(0, 0, 0, .9) inset;
}

#earth:before {
  /* [1] Again, break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Again, give it all the available space */
  width: 100%;
  height: 100%;

  /* [3] Duh. */
  content: '';

  /* [4] Add some shape and overlay effect to it */
  opacity: .2;
  border-radius: 50%;
  background: radial-gradient(circle at 100px 100px, #fff, #000);
}

#moon {
  /* [1] Allow it to contain the absolutely positions pseudo-elements (later-on) */

  
  /* [2] Set-up the dimensions and spacing */
  width: 100px;
  height: 100px;
  margin: 3em auto;

  /* [3] Prepare the animation effects */
  transition: transform 200ms linear;
  animation: lune_anim 60s linear infinite;
  /* This is going to be defined in the next step */

  /* [4] Tweak the appearance, and give it a nice background i.e. the world map */
  color: #000;
  border-radius: 50%;
  background: url(image/texture/2k_moon.jpg) 0 0 repeat / 330px;
  box-shadow: inset 5px 0 70px 0px rgba(0, 0, 0, 1);

  /* [5] Position things in a 3d space */
  transform-style: preserve-3d;
}

#moon:after {
  /* [1] Break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Make it take all the space available in the box (ahem... globe!) */
  width: 100%;
  height: 100%;

  /* [3] Make sure this has no generated content, as we want this just for fancy purposes */
  content: '';

  /* [4] Give it some shape and shadow */
  border-radius: 50%;
  box-shadow: -30px 0px 40px 10px rgba(0, 0, 0, .9) inset;
}

#moon:before {
  /* [1] Again, break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Again, give it all the available space */
  width: 100%;
  height: 100%;

  /* [3] Duh. */
  content: '';

  /* [4] Add some shape and overlay effect to it */
  opacity: .2;
  border-radius: 50%;
  background: radial-gradient(circle at 100px 100px, #fff, #000);
}

@keyframes terre_anim {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 800px 0;
  }
}

@keyframes lune_anim {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 500px 0;
  }
}

#jupiter {
  /* [1] Allow it to contain the absolutely positions pseudo-elements (later-on) */
  vertical-align: middle;
  position: absolute;
  top:1480px;
  left: 625px;
  

  /* [2] Set-up the dimensions and spacing */
  /* width: 300px;*/
  width: 600px;
  height: 600px;
 

  /* [3] Prepare the animation effects */
  transition: transform 200ms linear;
  animation: jupi_anim 20s linear infinite;
  /* This is going to be defined in the next step */

  /* [4] Tweak the appearance, and give it a nice background i.e. the world map */
  color: #000;
  border-radius: 50%;
  background: url(image/texture/2k_jupiter.jpg) 0 0 repeat / 1200px;
  box-shadow: inset 15px 0 40px 0px rgba(0, 0, 0, 1);

  /* [5] Position things in a 3d space */
  transform-style: preserve-3d;
}

#jupiter:after {
  /* [1] Break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Make it take all the space available in the box (ahem... globe!) */
  width: 100%;
  height: 100%;

  /* [3] Make sure this has no generated content, as we want this just for fancy purposes */
  content: '';

  /* [4] Give it some shape and shadow */
  border-radius: 50%;
  box-shadow: -60px 10px 80px 20px rgba(0, 0, 0, .9) inset;
}

#jupiter:before {
  /* [1] Again, break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Again, give it all the available space */
  width: 100%;
  height: 100%;

  /* [3] Duh. */
  content: '';

  /* [4] Add some shape and overlay effect to it */
  opacity: .2;
  border-radius: 50%;
  background: radial-gradient(circle at 100px 100px, #fff, #000);
  
}

#ceres {
  /* [1] Allow it to contain the absolutely positions pseudo-elements (later-on) */

  
  /* [2] Set-up the dimensions and spacing */
  width: 50px;
  height: 50px;
  margin: 3em auto;


  /* [3] Prepare the animation effects */
  transition: transform 200ms linear;
  animation: ceres_anim 60s linear infinite;
  /* This is going to be defined in the next step */

  /* [4] Tweak the appearance, and give it a nice background i.e. the world map */
  color: #000;
  border-radius: 50%;
  background: url(image/texture/2k_ceres_fictional.jpg) 0 0 repeat / 330px;
  box-shadow: inset 2px 0 10px 0px rgba(0, 0, 0, 1);

  /* [5] Position things in a 3d space */
  transform-style: preserve-3d;
}

#ceres:after {
  /* [1] Break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;

  /* [2] Make it take all the space available in the box (ahem... globe!) */
  width: 100%;
  height: 100%;

  /* [3] Make sure this has no generated content, as we want this just for fancy purposes */
  content: '';

  /* [4] Give it some shape and shadow */
  border-radius: 50%;
  box-shadow: -10px 0px 10px 1px rgba(0, 0, 0, .9) inset;
}

#ceres:before {
  /* [1] Again, break the flow to show this as an overlay */
  position: absolute;
  top: 0;
  left: 0;1200

  /* [2] Again, give it all the available space */
  width: 100%;
  height: 100%;

  /* [3] Duh. */
  content: '';

  /* [4] Add some shape and overlay effect to it */
  opacity: .2;
  border-radius: 50%;
  background: radial-gradient(circle at 100px 100px, #fff, #000);
}

@keyframes jupi_anim {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 1200px 0;
  }
}


@keyframes ceres_anim {
  0% {
    background-position: 0 0;
  }

  100% {
    background-position: 500px 0;
  }
}

